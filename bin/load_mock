#!/usr/bin/env python
"""
 load_mock
 lss: load an ASCII mock catalog into an `MockCatalog` class
 
 author: Nick Hand
 contact: nhand@berkeley.edu
 creation date: 06/17/2014
"""
import argparse
from flipper import flipperDict
    
#-------------------------------------------------------------------------------
def load_mock(args):
    """
    Load and save the `HaloMock` instance
    """
    from lss import HODMock, HaloMock
    
    # read in the parameter file
    params = flipperDict.flipperDict()
    params.readFromFile(args.param_file)

    # initialize the empty mock catalog
    if args.type == 'halo':
        mock = HaloMock(params['redshift'], params['box_size'], params['units'], cosmo=params['cosmology'])
        p = params['input']
        mock.load(p['file'], p['fields'], params['halo_id'], skip_lines=p['skip_lines'])
    else:
        mock = HODMock(params['redshift'], params['box_size'], params['units'], cosmo=params['cosmology'])
        p = params['input']
        mock.load(p['file'], p['fields'], params['halo_id'], params['type_params'], skip_lines=p['skip_lines'])
        
    # now save the file
    mock.save(params['outfile'])
    
#-------------------------------------------------------------------------------
if __name__ == '__main__':

    # setup the main parser
    desc = "load an ASCII mock catalog into an `MockCatalog` class"
    parser = argparse.ArgumentParser(description=desc)
    
    h = "the name of the file holding the parameters"
    parser.add_argument('param_file', type=str, help=h)
    
    h = 'either load and save a `HaloMock` or `HODMock` class' 
    parser.add_argument('--type', type=str, choices=['halo', 'galaxy'], required=True, help=h) 
    
    # parse args and call
    args = parser.parse_args()
    load_mock(args)
    
#-------------------------------------------------------------------------------