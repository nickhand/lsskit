#!/usr/bin/env python
"""
 compute_fiber_collisions

 author: Nick Hand
 contact: nhand@berkeley.edu
 creation date: 06/25/2014
"""
import argparse
from flipper import flipperDict
import hod_mock

def main(args):
    """
    Load and save the MockHOD instance
    """
    params = flipperDict.flipperDict()
    params.readFromFile(args.param_file)
               
    
    # compute the collision groups
    if args.compute_groups:
    
        # load the mock
        print "loading mock file..."
        mock = hod_mock.load(params['mock_file'])
        
        print "computing collision groups..."
        mock.compute_collision_groups(params['radius'], 
                                        params['radius_units'], 
                                        coord_keys=params['coordinate_keys'], 
                                        nprocs=params['nprocs'])
                                                    
        
        mock.save(params['mock_file'])
    
    # assign fibers
    if args.assign_fibers:
        
        # load the mock
        print "loading mock file..."
        mock = hod_mock.load(params['mock_file'])
        
        print "assigning fibers..."
        mock.assign_fibers(params['resolution_fraction'])
                
        # now save the file
        mock.save(params['mock_file'])

#end main
    
#-------------------------------------------------------------------------------
if __name__ == '__main__':
    
    # parse the input arguments
    desc = "load a mock catalog from file and compute the fiber collisions"
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('param_file', type=str, help="the parameter file") 
    
    h = 'whether to compute the collision groups'
    parser.add_argument('--compute_groups', action='store_true', default=False, help=h)
    
    h = 'whether to assign fibers'
    parser.add_argument('--assign_fibers', action='store_true', default=False, help=h) 
    
    args = parser.parse_args()

    main(args)

#-------------------------------------------------------------------------------